<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ani_FlyingSkull</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_FlyingEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Attributes
Bullet = obj_EnemyLaserBullet;
fireSubimage = 0;
BoltsFired = 0;
rangedAttack = true;
SightRadius = 10;
Charging = false;
Firing = false;
deadSound = sfx_GolemDead;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Statistics
statStrength = 8;
statVitality = 0;
statDexterity = 4;
statFortitude = 15;
statWisdom = 0;
statMagic = 12;

enemyName = "Flying Skull";
lootExp = 6;
lootGold = 6;
set_statistics(self, true);

baseHealth = 40;
baseMana = 0;

statMaxHealth = baseHealth;
statHealth = statMaxHealth;
statMaxMana = baseMana;
statMana = statMaxMana;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize States
stateNormal = sprite_index;
frameNormal = 0;
stateCharging = sprite_index;
frameCharging = 0.5;
stateFiring = sprite_index;
frameFiring = 0.15;
stateVulnerable = sprite_index;
frameVulnerable = 0;
stateDead = ani_FlyingSkull_death;
frameDead = 0.5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize VRI's
ds_list_add(Elements,
                    "MAGIC", 0.5,
                    "DARKNESS", 0.5,
                    "HOLY", 2.0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Drops
lootDrops = ds_list_create();
ds_list_add(lootDrops,
        itm_SkullRod, 0.2, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Charge Up and Fire
if not (Dead or obj_GUI.GameFrozen or obj_GUI.Cutscene or (status("PARALYZE") + 1)) {
    if (InRadius) {
        if (not Charging) {
            Attacking = true;
            Charging = true;
            //hSpeed = 0;
            //vSpeed = 0;
        }
    }
    
    if (Charging) {
        if (round(image_index) == 24) {
            Charging = false;
            Firing = true;
        }
    }
    if (Firing) {
        for (i = 0; i &lt; 3; i += 1) {
            if (round(image_index) == i + 25 and BoltsFired == i) {
                bDir = point_direction(x-2, y+7, targetX + TileDimensions, targetY) + 90;
                with (instance_create(x-2, y+7, Bullet)) {
                    hSpeed = other.bSpeed * sin(other.bDir * pi / 180);
                    vSpeed = other.bSpeed * cos(other.bDir * pi / 180);
                    other.hSpeed = -hSpeed;
                    other.vSpeed = -vSpeed;
                    Origin = other;
                }
                BoltsFired += 1;
            }
        }
        if (round(BoltsFired) == 3) {
            Firing = false;
        }
    }
    else {
        BoltsFired = 0;
    }
    if (not (Charging or Firing)) {
        Attacking = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set States
if not (obj_GUI.GameFrozen or (status("PARALYZE") + 1))
{
    if Dead
    {
        sprite_index = stateDead;
        image_speed = frameDead * obj_GUI.FrameModulus;
    }
    else if Firing
    {
        sprite_index = stateFiring;
        image_speed = frameFiring * obj_GUI.FrameModulus;
    }
    else if Charging
    {
        sprite_index = stateCharging;
        image_speed = frameCharging * obj_GUI.FrameModulus;
    }
    else
    {
        sprite_index = stateNormal;
        image_speed = frameNormal * obj_GUI.FrameModulus;
        image_index = 0;
    }
}
else
{
    image_speed = 0;
}

if not (Attacking)
{
    dir = sign(hSpeed);
    switch dir
    {
        case 0: image_xscale = 1; break;
        default: 
                switch Firing
                {
                    case true: image_xscale = sign(hSpeed); break;
                    case false: image_xscale = -sign(hSpeed); break;
                } break;
    }
}
else
{
    switch dir
    {
        case 0: image_xscale = 1; break;
        default: image_xscale = sign(x - obj_Player.x); break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flicker Fire
if not obj_GUI.GameFrozen
{
    fireSubimage += (1/2) * obj_GUI.FrameModulus;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop Firing
Charging = false;
Firing = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Fire
if not (Dead and image_index &gt;= 13)
{
    draw_sprite_ext(ani_FlyingSkull_fire, fireSubimage, x, y, image_xscale, 1, 0, c_white, 1);
}
else
{
    draw_sprite_ext(ani_FlyingSkull_fire_death, image_index - 13, x, y, image_xscale, 1, 0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
