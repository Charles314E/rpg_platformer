<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_WeaponSwitcher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>par_HUDObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
image_alpha = 0;
sprite_index = sht_Weapons;
Selected = false;

xx = 100;
yy = 24;

slotSize = 32;
weaponSprite = noone;
weaponSubimage = noone;
weaponAttack = 0;
CurrentWeapon = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Weapons
Weapon = 0;
WeaponsList = ds_list_create();
for (i = 0; i &lt; 10; i += 1) {
    ds_list_add(WeaponsList, 0);
}
if (debug_mode) {
    ds_list_replace(WeaponsList, 0, "Steel Sword");
    ds_list_replace(WeaponsList, 2, "Steel Greatsword");
    ds_list_replace(WeaponsList, 5, "Steel Claws");
    ds_list_replace(WeaponsList, 4, "Wooden Bow");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch Weapon
if (not obj_Menu.MenuShown) {
    if (instance_exists(obj_Player)) {
        if (not obj_Player.Attacking) {
            for (i = 1; i &lt;= 10; i += 1) {
                if (keyboard_check_pressed(i + 48) or (i = 10 and keyboard_check_pressed(48))) {
                    Weapon = i - 1;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Weapon Subimage Sprite
weaponSlot = ds_list_find_value(WeaponsList, Weapon);
//Record items if slot is filled
if (is_string(weaponSlot)) {
    get_item_from_database(obj_Inventory.dbWeapons, weaponSlot);
    weaponSprite = itemSprite;
    weaponSubimage = itemSubimage;
    weaponDescription = itemDescription;
    weaponAttack = ds_list_find_value(obj_Inventory.dbWeapons, wi + 6);
}
else {
    weaponSprite = noone;
    weaponSubimage = noone;
    weaponDescription = "";
    weaponAttack = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Weapon
switch (Weapon) {
    case 0: CurrentWeapon = htb_Sword; break;
    case 1: CurrentWeapon = htb_Axe; break;
    case 2: CurrentWeapon = htb_Greatsword; break;
    case 4: CurrentWeapon = htb_Bow; break;
    case 5: CurrentWeapon = htb_Claws; break;
    case 7: CurrentWeapon = htb_Scythe; break;
    case 8: CurrentWeapon = htb_Shield; break;
    case 9: 
        switch (weaponSlot) {
            case "Fire Staff": CurrentWeapon = wpn_FireStaff; break;
            case "Ice Staff": CurrentWeapon = wpn_IceStaff; break;
            case "Lightning Staff": CurrentWeapon = wpn_LightningStaff; break;
        }; break;
    default: CurrentWeapon = htb_Melee; break;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Tooltip
if (not obj_Menu.MenuShown) {
    slotHover = false;
    slot = ds_list_find_value(WeaponsList, Weapon);
    if (is_string(slot)) {
        create_item_tooltip(slot, obj_Inventory, xx, yy, slotSize, slotSize, 4, 3);
    }
    if (not slotHover) {
        tooltipShown = false;
        tooltipName = "";
        tooltipDescription = "";
        tooltipStats = "";
    }
}
else {
    tooltipShown = false;
    tooltipName = "";
    tooltipDescription = "";
    tooltipStats = "";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch Weapon
var weaponSlot, wi;
if (not obj_Menu.MenuShown) {
    if (instance_exists(obj_Player)) {
        if (not obj_Player.Attacking) {
            Weapon -= 1
            if (Weapon == -1) {
                Weapon = image_number - 1
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Switch Weapon
var weaponSlot, wi;
if (not obj_Menu.MenuShown) {
    if (instance_exists(obj_Player)) {
        if (not obj_Player.Attacking) {
            Weapon += 1
            if (Weapon == 10) {
                Weapon = 0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI
if (not obj_Menu.MenuShown) {
    if (instance_exists(obj_Player)) {
        draw_sprite(sht_Weapons, Weapon, xx, yy);
        var wx, wy;
        wx = xx + (slotSize / 2);
        wy = yy + (slotSize / 2);
        if (weaponSprite != noone) {
            draw_sprite(weaponSprite, weaponSubimage, wx - 9, wy - 9);
        }
        if (obj_Player.Attacking or instance_exists(CurrentWeapon)) {
            draw_set_alpha(0.5);
            draw_rectangle_colour(xx + 3, yy + 2, xx + 28, yy + 29, c_black, c_black, c_black, c_black, false);
            draw_set_alpha(1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Tooltip
if (not obj_Menu.MenuShown) {
    draw_set_halign(fa_right);
    draw_text_transformed_colour(view_wport, 0, tooltipName, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, 1);
    draw_text_transformed_colour(view_wport, 16, tooltipShown, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, 1);
    draw_text_transformed_colour(view_wport, 32, string(obj_GUI.cursor_x) + "/" + string(obj_GUI.cursor_y), 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, 1);
    draw_set_halign(fa_left);
    if (tooltipShown) {
        draw_tooltip(obj_GUI.cursor_x, obj_GUI.cursor_y, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
