<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000002</depth>
  <persistent>-1</persistent>
  <parentName>par_HUDObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keybinds
set_keybinds(ord("W"), 
             ord("A"), 
             ord("S"), 
             ord("D"), 
             vk_space, 
             ord("E"), 
             vk_tab, 
             ord("Z"), 
             vk_shift, 
             ord("R"),
             ord("K"),
             ord("G"));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deactivate Message Boxes
with msg_Messagebox
{
    Active = false;
}
with msg_Choicebox
{
    Active = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Attributes
MenuShown = false;
Nested = false;
backAlpha = 0;
cursorSubimage = 0;
fw = (view_wport[view_current] / 16) - 4;
fh = 8;
fileSelected = 0;
fileNumber = 3;
fileNumberWidth = 6;
loading = false;
exiting = false;

optionsList = ds_list_create();
ds_list_add(optionsList, "Load", "Erase", "Leave");
statList = ds_list_create();
ds_list_add(statList, "hp", "mp", "lvl", "gld", "str", "vit", "dex", "for", "wis", "mag");

textAlpha = 0;
textOffset = 0;
n = 0;
menuOffset = 64;
cursorAlpha = 1;
lineAlpha = 0;

dbWeapons = generate_weapon_database();
weaponTypes = generate_weapon_types();

alarm[0] = room_speed / 30;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Files
load_files();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shift Menu Options Up
if cursorAlpha &lt; 1
{
    canTab = false;
    menuOffset += 3.2
    cursorAlpha += 0.05;
    lineAlpha -= 0.05;
    alarm[5] = room_speed / 30;
}
else
{
    canTab = true;
    Nested = false;
    if ds_list_find_value(optionsList, Option) = "Inventory"
    {
        obj_Inventory.InventoryShown = false;
    }
    else if ds_list_find_value(optionsList, Option) = "Status"
    {
        obj_Status.StatusShown = false;
    }
    else if ds_list_find_value(optionsList, Option) = "Map"
    {
        obj_Map.MapShown = false;
    }
    else if ds_list_find_value(optionsList, Option) = "Quit"
    {
        Quitting = false;
        qChar = 0;
        QuitTimer = 0;
        CurrentQuitMessage = "";
        CurrentQuitConfirmChoice = "";
        CurrentQuitDeclineChoice = "";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shift Menu Options Down
if cursorAlpha &gt; 0
{
    canTab = false;
    menuOffset -= 3.2
    cursorAlpha -= 0.05;
    lineAlpha += 0.05;
    alarm[4] = room_speed / 30;
}
else
{
    alarm[6] = room_speed / 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Option Shadow
if n &lt; 32
{
    textAlpha += 0.01;
    textOffset += 0.25;
    n += 1;
    alarm[3] = room_speed / 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate Cursor
if MenuShown
{
    cursorSubimage += 1;
    alarm[2] = room_speed * obj_GUI.FrameModulus * 0.2;
}
else
{
    cursorSubimage = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lighten Background
if backAlpha &gt; 0
{
    backAlpha -= 0.02;
    alarm[1] = room_speed / 30;
}
else
{
    if loading
    {
        with obj_Controller
        {
            fileSelected = other.fileSelected;
        }
        cutscene_start(obj_Controller, tml_NewGame);
    }
    if exiting
    {
        if instance_exists(obj_GUI)
        {
            if instance_exists(msg_Messagebox) or instance_exists(msg_Choicebox)
            {
                instance_destroy();
                with msg_Messagebox
                {
                    Active = true;
                }
                with msg_Choicebox
                {
                    Active = true;
                }
            }
            else
            {
                obj_GUI.GameFrozen = false;
                obj_GUI.Cutscene = false;
            }
        }
        else
        {
            game_restart();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Darken Background
if backAlpha &lt; 0.5
{
    backAlpha += 0.02;
    alarm[0] = room_speed / 30;
}
else
{
    alarm[2] = room_speed / 30;
    textAlpha = 0;
    textOffset = 0;
    n = 0;
    alarm[3] = room_speed / 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keybinds
set_keybinds(ord("W"), 
             ord("A"), 
             ord("S"), 
             ord("D"), 
             vk_space, 
             ord("E"), 
             vk_tab, 
             ord("Z"), 
             vk_shift, 
             ord("R"),
             ord("K"),
             ord("G"));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move Cursor
if backAlpha &gt;= 0.5
{
    if kpDown
    {
        fileSelected = min(fileSelected + 1, fileNumber - 1);
        textAlpha = 0;
        textOffset = 0;
        n = 0;
        alarm[3] = room_speed / 30;
    }
    if kpUp
    {
        fileSelected = max(fileSelected - 1, 0);
        textAlpha = 0;
        textOffset = 0;
        n = 0;
        alarm[3] = room_speed / 30;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select File
if backAlpha &gt;= 0.5
{
    if kpInteract or kpAttack
    {
        var fileAttr = ds_list_find_value(fileList, fileSelected);
        if ds_list_size(fileAttr) = 0
        {
            loading = true;
            alarm[1] = room_speed / 30;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exit
if keyboard_check_pressed(vk_escape) and backAlpha &gt;= 0.5
{
    exiting = true;
    alarm[1] = room_speed / 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Background
if (backAlpha &gt; 0) {
    draw_set_alpha(backAlpha);
    draw_rectangle_colour(0, 0, view_wport[view_current], view_hport[view_current], c_black, c_black, c_black, c_black, false);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Menu
if backAlpha &gt;= 0.5
{
    /*draw_set_font(fnt_TitleFont);
    draw_set_halign(fa_center);
    draw_set_valign(fa_center);
    draw_text_ext_transformed_colour(view_wport[view_current] / 2, 32, "New Game", 0, 960, 1, 1, 0, c_white, c_white, c_white, c_white, 1);
    draw_set_font(fnt_Designs);
    draw_text_ext_transformed_colour(view_wport[view_current] / 2, 32, "U", 0, 480, 0.8, 0.8, 0, c_white, c_white, c_white, c_white, 0.25);
    draw_set_valign(fa_top);
    draw_set_halign(fa_left);
    for (var i = 0; i &lt; fileNumber; i += 1)
    {
        if fileSelected = i
        {
            create_message_box("", sht_Box, fileNumberWidth, fh, noone, textAlpha, 32 - textOffset, 224 + (i * ((fh * 16) + 8)) + textOffset);
            create_message_box("", sht_Box, fw - fileNumberWidth, fh, noone, textAlpha, 32 + (fileNumberWidth * 16) - textOffset, 224 + (i * ((fh * 16) + 8)) + textOffset);
            draw_set_font(fnt_MenuFont);
            draw_set_halign(fa_center);
            draw_set_valign(fa_center);
            draw_text_ext_transformed_colour(32 + (fileNumberWidth * 8) - textOffset, 224 + (fh * i * 16) + (8 * (i + (fh * (2/3)))) + textOffset, i + 1, 32, 480, 0.75, 0.75, 0, c_white, c_white, c_white, c_white, textAlpha);
            draw_set_valign(fa_top);
            draw_set_halign(fa_left);
        }
        create_message_box("", sht_Box, fileNumberWidth, fh, noone, 1, 32, 224 + (i * ((fh * 16) + 8)));
        create_message_box("", sht_Box, fw - fileNumberWidth, fh, noone, 1, 32 + (fileNumberWidth * 16), 224 + (i * ((fh * 16) + 8)));
        draw_set_font(fnt_MenuFont);
        draw_set_halign(fa_center);
        draw_set_valign(fa_center);
        draw_text_ext_transformed_colour(32 + (fileNumberWidth * 8), 224 + (fh * i * 16) + (8 * (i + (fh * (2/3)))), i + 1, 32, 480, 0.75, 0.75, 0, c_white, c_white, c_white, c_white, 1);
        draw_set_valign(fa_top);
        draw_set_halign(fa_left);
        draw_set_font(fnt_SystemFont);
        var fileAttr = ds_list_find_value(fileList, i);
        if ds_list_size(fileAttr) &gt; 0
        {
            for (var ii = 0; ii &lt; 2; ii += 1)
            {
                var tx, ty, currentStat, maxStat;
                tx = (32 + (fw * 16)) - 256 + ((ii mod 2) * 128);
                ty = 240 + (i * ((fh * 16) + 8)) + (floor(ii / 2) * 24);
                currentStat = ds_list_find_value(fileAttr, ii);
                maxStat = ds_list_find_value(fileAttr, ii + 10);
                statPercentage = currentStat / maxStat;
                shader_set(shd_GreyedOut);
                draw_sprite_ext(sht_FileStatIcons, ii, tx, ty, 1.5, 1.5, 0, c_white, 1);
                shader_reset();
                draw_sprite_ext(sht_FileStatIcons, ii, tx, ty, 1.5, 1.5, 0, c_white, statPercentage);
                draw_text_transformed_colour(tx + 32, ty, string(currentStat) + " / " + string(maxStat), 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, 1);
            }
            for (var ii = 2; ii &lt; 4; ii += 1)
            {
                var tx, ty;
                tx = (32 + (fw * 16)) - 256 + ((ii mod 2) * 128);
                ty = 240 + (i * ((fh * 16) + 8)) + (floor(ii / 2) * 24);
                draw_sprite_ext(sht_FileStatIcons, ii, tx, ty, 1.5, 1.5, 0, c_white, 1);
                draw_text_transformed_colour(tx + 32, ty, ds_list_find_value(fileAttr, ii), 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, 1);
            }
            for (var ii = 0; ii &lt; 6; ii += 1)
            {
                var tx, ty;
                tx = (32 + (fw * 16)) - 384 + ((ii mod 3) * 128);
                ty = 288 + (i * ((fh * 16) + 8)) + (floor(ii / 3) * 24);
                draw_sprite_ext(sht_Attributes, ii, tx, ty, 1.5, 1.5, 0, c_white, 1);
                draw_text_transformed_colour(tx + 32, ty, ds_list_find_value(fileAttr, ii + 4), 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, 1);
            }
        }
    }*/
    draw_title("New Game", "U");
    for (var i = 0; i &lt; fileNumber; i += 1) {
        draw_file_load(i, i, 32, 224);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
