<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ani_ElevatorPlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>0</persistent>
  <parentName>obj_Block</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
hSpeed = 0;
vSpeed = 0;
ElevatorCharge = 0;
CanInteract = false;
Switch = -1;
Floor = 0;
image_speed = 1 * obj_GUI.FrameModulus;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move Down
vSpeed = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move Up
vSpeed = -2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Activation Orbs
if Switch = -1
{
    if ElevatorCharge = instance_number(obj_ActivateElevatorOrb)
    {
        CanInteract = true;
    }
    else
    {
        CanInteract = false;
    }
}
else
{
    if get_switch(Switch)
    {
        CanInteract = true;
    }
    else
    {
        CanInteract = false;
    }
}
if vSpeed != 0
{
    CanInteract = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Interact
if CanInteract
{
    if vSpeed = 0
    {
        if collision_rectangle(x-sprite_xoffset, y-sprite_yoffset-4, x+sprite_width-sprite_xoffset, y+sprite_height-sprite_yoffset, obj_Player, false, true)
        {
            if obj_GUI.kpUp and Floor &lt; HighestFloor
            {
                obj_Player.CanInteract = false;
                alarm[0] = 1;
            }
            else if obj_GUI.kpDown and Floor &gt; LowestFloor
            {
                obj_Player.CanInteract = false;
                alarm[1] = 1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
if instance_exists(obj_Controller)
{
    if not obj_GUI.GameFrozen and obj_Controller.MapType = "Platform"
    {
        if place_meeting(x+hSpeed, y, obj_Block)
        {
            yPlus = 0;
            while place_meeting(x+hSpeed, y-yPlus, obj_Block) and yPlus &lt;= TileDimensions
            {
                yPlus += 1;
            }
            if place_meeting(x+hSpeed, y-yPlus, obj_Block)
            {
                while !place_meeting(x+sign(hSpeed), y, obj_Block)
                {
                    x += sign(hSpeed);
                }
                hSpeed = 0;
            }
            else
            {
                y -= yPlus;
            }
        }
        
        instBlock = instance_place(x, y+vSpeed, obj_Block);
        if instBlock
        {
            while !place_meeting(x, y+sign(vSpeed), obj_Block)
            {
                y += sign(vSpeed);
            }
            vSpeed = 0
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change Character Position
if not obj_GUI.GameFrozen
{
    x += hSpeed;
    y += vSpeed;
    if place_meeting(x, bbox_top-abs(vSpeed), obj_Player)
    {
        obj_Player.y += sign(abs(vSpeed) + vSpeed) * 4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change Floor
if vSpeed != 0
{
    if sign(obj_Player.y - y) = 1 and sign(vSpeed) = -1
    {
        vSpeed = abs(vSpeed);
    }
    switch sign(vSpeed)
    {
        case -1: bbox = bbox_bottom; break;
        case 1: bbox = bbox_top; break;
    }
    instEventFloor = collision_rectangle(bbox_left-8, bbox, bbox_right+8, bbox, evt_ElevatorStop, false, true);
    if instEventFloor
    {
        obj_Player.CanInteract = true;
        if instEventFloor.Floor != Floor
        {
            vSpeed = 0;
            y = instEventFloor.y;
            Floor = instEventFloor.Floor;
            shake_camera(2, 0.9);
            if Floor = LowestFloor
            {
                shake_camera(4, 0.9);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self
if collision_rectangle(x-sprite_xoffset, y-sprite_yoffset-4, x+sprite_width-sprite_xoffset, y+sprite_height-sprite_yoffset, obj_Player, false, true)
{
    if CanInteract
    {
        shader_set(shd_WhitedOut);
        draw_sprite_stretched(sprite_index, image_index, x-sprite_xoffset-1, y-sprite_yoffset-1, sprite_width + 2, sprite_height + 2);
        shader_reset();
    }
}
if Switch = -1
{
    if ElevatorCharge &lt; instance_number(obj_ActivateElevatorOrb)
    {
        shader_set(shd_GreyedOut);
        draw_self();
        shader_reset();
        draw_sprite_ext(sprite_index, 0, x, y, 1, 1, 0, c_white, ElevatorCharge / instance_number(obj_ActivateElevatorOrb));
    }
    else
    {
        draw_self();
    }
}
else
{
    if not get_switch(Switch)
    {
        shader_set(shd_GreyedOut);
        draw_self();
        shader_reset();
    }
    else
    {
        draw_self();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Bounding Box
if obj_GUI.Debug
{
    draw_set_alpha(0.5);
    if vSpeed = 0
    {
        draw_rectangle_colour(bbox_left-8, bbox_top, bbox_right+8, bbox_bottom, c_lime, c_lime, c_lime, c_lime, false);
    }
    else
    {
        draw_rectangle_colour(bbox_left-8, bbox, bbox_right+8, bbox, c_lime, c_lime, c_lime, c_lime, false);
    }
    draw_set_alpha(1);
    draw_set_halign(fa_center);
    draw_text_transformed_colour(x-8, y-8, string(ElevatorCharge) + "/" + string(instance_number(obj_ActivateElevatorOrb)), 0.1625, 0.1625, 0, c_black, c_black, c_black, c_black, 1);
    draw_set_halign(fa_left);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
