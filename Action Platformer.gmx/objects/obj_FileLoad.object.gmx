<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000002</depth>
  <persistent>-1</persistent>
  <parentName>par_HUDObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keybinds
set_keybinds(ord("W"), 
             ord("A"), 
             ord("S"), 
             ord("D"), 
             vk_space, 
             ord("E"), 
             vk_tab, 
             ord("Z"), 
             vk_shift, 
             ord("R"),
             ord("K"),
             ord("G"));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deactivate Message Boxes
with msg_Messagebox
{
    Active = false;
}
with msg_Choicebox
{
    Active = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Attributes
MenuShown = false;
Nested = false;
backAlpha = 0;
cursorSubimage = 0;
fw = (view_wport[view_current] / 16) - 4;
fh = 8;
fileSelected = 0;
fileOpened = -1;
filePlaying = false;
fileNumber = 3;
fileNumberWidth = 6;
loading = false;
exiting = false;
erasing = -1;
surface = noone;

fileOption = 0;
optionsList = ds_list_create();
ds_list_add(optionsList, "Load", "Erase", "Leave");
statList = ds_list_create();
ds_list_add(statList, "hp", "mp", "lvl", "gld", "str", "vit", "dex", "for", "wis", "mag");

textAlpha = 0;
textOffset = 0;
n = 0;
menuOffset = 64;
cursorAlpha = 1;
lineAlpha = 0;

dbWeapons = generate_weapon_database();
weaponTypes = generate_weapon_types();

alarm[0] = room_speed / 30;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Files
load_files();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Surface
if (surface_exists(surface)) {
    surface_free(surface);
    surface = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Interact with File
fileSelected = fileOpened;
if (ds_list_find_value(optionsList, fileOption) == "Load") {
    var fileAttr = ds_list_find_value(fileList, fileSelected * 2);
    if (ds_list_size(fileAttr) &gt; 0) {
        filePlaying = true;
    }
}
else if (ds_list_find_value(optionsList, fileOption) == "Erase") {
    if (loadedFile != fileSelected) {
        var fileAttr = ds_list_find_value(fileList, fileSelected * 2);
        if (ds_list_size(fileAttr) &gt; 0) {
            erasing = 0;
        }
    }
}
else if (ds_list_find_value(optionsList, fileOption) == "Leave") {
    fileOpened = -1;
    fileOption = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Option Shadow
if (n &lt; 32) {
    textAlpha += 0.01;
    textOffset += 0.25;
    n += 1;
    alarm[3] = room_speed / 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate Cursor
if (MenuShown) {
    cursorSubimage += 1;
    alarm[2] = room_speed * obj_GUI.FrameModulus * 0.2;
}
else {
    cursorSubimage = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lighten Background
if (backAlpha &gt; 0) {
    backAlpha -= 0.02;
    alarm[1] = room_speed / 30;
}
else {
    if (loading) {
        cutscene_start(obj_Controller, tml_LoadProgress);
    }
    if (exiting) {
        if (instance_exists(obj_GUI)) {
            if (instance_exists(msg_Messagebox) or instance_exists(msg_Choicebox)) {
                instance_destroy();
                with (msg_Messagebox) {
                    Active = true;
                }
                with (msg_Choicebox) {
                    Active = true;
                }
            }
            else {
                obj_GUI.GameFrozen = false;
                obj_GUI.Cutscene = false;
            }
        }
        else {
            game_restart();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Darken Background
if (backAlpha &lt; 0.5) {
    backAlpha += 0.02;
    alarm[0] = room_speed / 30;
}
else {
    alarm[2] = room_speed / 30;
    textAlpha = 0;
    textOffset = 0;
    n = 0;
    alarm[3] = room_speed / 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keybinds
set_keybinds(ord("W"), 
             ord("A"), 
             ord("S"), 
             ord("D"), 
             vk_space, 
             ord("E"), 
             vk_tab, 
             ord("Z"), 
             vk_shift, 
             ord("R"),
             ord("K"),
             ord("G"));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move Cursor
if (backAlpha &gt;= 0.5) {
    if (kpDown) {
        if (fileOpened == -1) {
            fileSelected = min(fileSelected + 1, fileNumber - 1);
        }
        else {
            fileOption = min(fileOption + 1, ds_list_size(optionsList) - 1);
        }
        textAlpha = 0;
        textOffset = 0;
        n = 0;
        alarm[3] = room_speed / 30;
    }
    if (kpUp) {
        if (fileOpened == -1) {
            fileSelected = max(fileSelected - 1, 0);
        }
        else {
            fileOption = max(fileOption - 1, 0);
        }
        textAlpha = 0;
        textOffset = 0;
        n = 0;
        alarm[3] = room_speed / 30;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select File
if (backAlpha &gt;= 0.5) {
    if (kpInteract or kpAttack) {
        if (filePlaying) {
            var fileAttr = ds_list_find_value(fileList, fileSelected * 2);
            if (ds_list_size(fileAttr) &gt; 0) {
                loading = true;
                alarm[1] = room_speed / 30;
            }
        }
        else if (fileOpened == -1) {
            fileOpened = fileSelected;
        }
        else {
            alarm[4] = 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exit
if (keyboard_check_pressed(vk_escape) and backAlpha &gt;= 0.5) {
    exiting = true;
    alarm[1] = room_speed / 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Background
if (backAlpha &gt; 0) {
    draw_set_alpha(backAlpha);
    draw_rectangle_colour(0, 0, view_wport[view_current], view_hport[view_current], c_black, c_black, c_black, c_black, false);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Menu
if (backAlpha &gt;= 0.5) {
    draw_title("Load a file", "U");
    if (fileOpened == -1) {
        for (var i = 0; i &lt; fileNumber; i += 1) {
            draw_file_load(i, i, 32, 224);
        }
    }
    else {
        var exclusion = ds_list_create();
        if (loadedFile != fileSelected) {
            var fileAttr = ds_list_find_value(fileList, fileSelected * 2);
            if (ds_list_size(fileAttr) == 0) {
                ds_list_add(exclusion, 0, 1);
            }
        }
        else {
            ds_list_add(exclusion, 0, 1);
        }
        draw_file_load(fileSelected, 0, 32, 224);
        draw_menu(optionsList, fileOption, 32, 224 + (fh * 16) + 64, exclusion);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Erase File
if (erasing == max(0, min(erasing, room_speed * 3))) {
    if (!surface_exists(surface)) {
        surface = surface_create(view_wport, view_hport);
    }
    surface_set_target(surface);
    for (var p = 0; p &lt; 6; p += 1) {
        part_particles_create(obj_Particles.partSystem, vx + 32 + random_range(0, fw * 16), vy + 224 + random_range(0, fh * 16), obj_Particles.partDustKickedLarge, 1);
    }
    surface_reset_target();
    draw_surface(surface, 0, 0);
    erasing += 1;
    if (erasing == room_speed * 3) {
        erase_game(fileSelected + 1);
        show_debug_message(room_get_name(room));
        load_files();
        show_debug_message(room_get_name(room));
    }
}
else {
    if (surface_exists(surface)) {
        surface_free(surface);
        surface = noone;
    }
    erasing = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
