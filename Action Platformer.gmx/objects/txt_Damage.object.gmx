<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Damage</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>par_Text</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
Damage = 0;
TextColour = c_black;
TextFont = fnt_DamageFont;
Critical = false;
Damaged = false;
Element = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage Entity
if not Damaged
{
    if Element != ""
    {
        IconSprite = sht_Elements;
        IconSubimage = ds_list_find_index(obj_GUI.Elements, string_flupper(Element));
        ei = ds_list_find_index(Origin.Elements, Element);
        if ei != -1
        {
            percentage = ds_list_find_value(Origin.Elements, ei + 1);
            if percentage &gt; 0
            {
                Damage = max(1, floor(Damage * percentage));
            }
            else
            {
                Damage = 0;
            }
        }
        if Damage &gt; 0 and ei != -1
        {
            switch sign(percentage - 1)
            {
                case -1: eText = "RESISTANCE!"; eColour = c_lime; break;
                case 0: eText = ""; break;
                case 1: eText = "WEAKNESS!"; eColour = c_orange; break;
            }
        }
        else if Damage = 0
        {
            eText = "IMMUNE!";
            eColour = c_green;
        }
    }
    decrease_health(Origin, Damage);
    Damaged = true;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Text
if obj_Controller.MapType = "Platform"
{
    if Damage &gt; 0
    {
        switch sign(Damage)
        {
            case -1: Text = "+";
                TextColour = c_green;
                CriticalColour = c_lime;
                break;
            case 0: Text = "";
                TextColour = c_white;
                CriticalColour = c_yellow;
                break;
            case +1: Text = "-";
                TextColour = c_red;
                CriticalColour = c_orange;
                break;
        }
        switch Critical
        {
            case true: TextColour = CriticalColour;
                TextFont = fnt_CriticalHitFont;
                TextSize = 0.3;
                break;
            case false: TextColour = TextColour;
                TextFont = fnt_DamageFont;
                TextSize = 0.2;
                break;
        }
        if IconSprite != noone
        {
            Text += "{icon}";
        }
        Text += string(abs(Damage));
        Text = string_split(Text, "{", "}");
    }
    else
    {
        Text = string_split("", "");
    }
}
else if obj_Controller.MapType = "World"
{
    if IconSprite != noone
    {
        Text = string_split("{icon}", "{", "}");
    }
    else
    {
        Text = string_split("", "");
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw VRI's
if obj_Controller.MapType = "Platform"
{
    draw_set_font(TextFont);
    draw_set_halign(fa_center);
    if Element != ""
    {
        if Height &gt; 0
        {
            if ei != -1
            {
                if sign(Damage) = 1
                {
                    if percentage &gt; 0
                    {
                        draw_text_ext_transformed_colour(x, y - hOffset, eText, 0, 1024, TextSize * 0.5, TextSize * 0.5, 0, eColour, eColour, eColour, eColour, Alpha);
                    }
                }
                else if Damage = 0
                {
                    draw_text_ext_transformed_colour(x, y - hOffset, eText, 0, 1024, TextSize * 0.5, TextSize * 0.5, 0, eColour, eColour, eColour, eColour, Alpha);
                }
            }
        }
    }
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Information
if obj_GUI.Debug
{
    if Height &gt; 0
    {
        draw_text_ext_transformed_colour(x, y + (20 + hOffset), string(Element) + "/" + string(IconSubimage), 0, 1024, TextSize, TextSize, 0, TextColour, TextColour, TextColour, TextColour, Alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
