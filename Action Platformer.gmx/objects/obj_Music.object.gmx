<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Music</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>par_HUDObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
bgm = noone;
room_bgm = noone;
bgm_current = noone;
total_length = 0;
current_room = noone;
bgm_count = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Room
if current_room != room
{
    var room_prefix, room_title;
    room_split = string_split(room_get_name(room), "_");
    room_prefix = ds_list_find_value(room_split, 0);
    room_title = room_get_name(room);
    intro_length = 0;
    loop_length = 0;
    bgm_count += 1
    
    switch room_prefix
    {
        case "rm": 
            switch room_title
            {
                case "rm_TestRoom": room_bgm = msc_IntoTheDungeon; loop_length = 33; break;
                case "rm_TestBossRoom": room_bgm = noone; break;
                default: room_bgm = noone; break;
            }; break;
        case "btl": room_bgm = noone; break;
        default: room_bgm = noone; break;
    }
    
    if room_bgm != noone
    {
        if loop_length = 0
        {
            loop_length = audio_sound_length(room_bgm) - intro_length;
        }
        if room_bgm != bgm_current
        {
            bgm_current = room_bgm;
            switch_bgm(bgm_current, 1, intro_length, loop_length);
        }
    }
    else
    {
        switch_bgm(noone, 0, 0, 0);
    }
    current_room = room;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Room
if current_room != room
{
    var room_prefix, room_title;
    room_split = string_split(room_get_name(room), "_");
    room_prefix = ds_list_find_value(room_split, 0);
    room_title = room_get_name(room);
    intro_length = 0;
    loop_length = 0;
    bgm_count += 1
    
    switch room_prefix
    {
        case "rm": 
            switch ds_list_find_value(room_split, 1)
            {
                case "Dungeon1": 
                    switch ds_list_find_value(room_split, 2)
                    {
                        case "entranceRoom": room_bgm = noone; break;
                        case "bossRoom": room_bgm = noone; break;
                        case "room15": room_bgm = noone; break;
                        default: room_bgm = msc_IntoTheDungeon; loop_length = 33; break;
                    }; break;
                default: room_bgm = noone; break;
            }; break;
        case "btl": room_bgm = noone; break;
        default: room_bgm = noone; break;
    }
    
    if room_bgm != noone
    {
        if loop_length = 0
        {
            loop_length = audio_sound_length(room_bgm) - intro_length;
        }
        if room_bgm != bgm_current
        {
            bgm_current = room_bgm;
            switch_bgm(bgm_current, 1, intro_length, loop_length);
        }
    }
    else
    {
        switch_bgm(noone, 0, 0, 0);
    }
    current_room = room;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Music
pos = audio_sound_get_track_position(bgm);
if pos &gt; total_length
{
    audio_sound_set_track_position(bgm, pos - loop_length);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Information
if obj_GUI.Debug
{
    for (i = 0; i &lt; ds_list_size(room_split); i += 1)
    {
        draw_text_ext_transformed_colour(2, 192 + (16 * i), ds_list_find_value(room_split, i), 0, 96, 0.1625, 0.1625, 0, c_black, c_black, c_black, c_black, 1);
    }
    draw_text_ext_transformed_colour(98, 192, audio_get_name(bgm), 0, 96, 0.1625, 0.1625, 0, c_black, c_black, c_black, c_black, 1);
    draw_text_ext_transformed_colour(98, 208, string(intro_length) + "/" + string(loop_length), 0, 96, 0.1625, 0.1625, 0, c_black, c_black, c_black, c_black, 1);
    draw_text_ext_transformed_colour(98, 224, audio_sound_get_gain(bgm), 0, 96, 0.1625, 0.1625, 0, c_black, c_black, c_black, c_black, 1);
    draw_text_ext_transformed_colour(98, 240, string(pos) + "/" + string(total_length), 0, 96, 0.1625, 0.1625, 0, c_black, c_black, c_black, c_black, 1);
    draw_text_ext_transformed_colour(98, 256, room_get_name(current_room) + "/" + room_get_name(room) + "/" + string(bgm_count), 0, 96, 0.1625, 0.1625, 0, c_black, c_black, c_black, c_black, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
