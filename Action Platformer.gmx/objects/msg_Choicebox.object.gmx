<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Choicebox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_HUDObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keybinds
set_keybinds(ord("W"), 
             ord("A"), 
             ord("S"), 
             ord("D"), 
             vk_space, 
             ord("E"), 
             vk_tab, 
             ord("Z"), 
             vk_shift, 
             ord("R"),
             ord("K"),
             ord("G"));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
Subimage = 0;
ImageSpeed = 0.1;
choiceOption = 0;
choiceBackAlpha = 0;
choiceBackOffset = 0;
n = 0;
w = 20;
choiceInit = false;
choiceSelected = false;
Choices = ds_list_create();
cx = "x";
cy = "y";
Alignment = "&lt;";
Active = true;
if instance_exists(obj_GUI)
{
    obj_GUI.Cutscene = true;
}
ResumesGame = true;
UnpausesGame = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Option Shadow
if n &lt; 16
{
    choiceBackAlpha += 0.01;
    choiceBackOffset += 0.25;
    n += 1;
    alarm[0] = room_speed / 30;
}
else
{
    n = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keybinds
set_keybinds(ord("W"), 
             ord("A"), 
             ord("S"), 
             ord("D"), 
             vk_space, 
             ord("E"), 
             vk_tab, 
             ord("Z"), 
             vk_shift, 
             ord("R"),
             ord("K"),
             ord("G"));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Cursor Position
if ds_list_size(Choices) &gt; 0 and Active
{
    if kpUp
    {
        choiceOption = max(0, choiceOption - 1);
        choiceBackAlpha = 0;
        choiceBackOffset = 0;
        n = 0;
        alarm[0] = room_speed / 30;
    }
    if kpDown
    {
        choiceOption = min(floor(ds_list_size(Choices) / 2) - 1, choiceOption + 1);
        choiceBackAlpha = 0;
        choiceBackOffset = 0;
        n = 0;
        alarm[0] = room_speed / 30;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Select Choice
if ds_list_size(Choices) &gt; 0 and Active
{
    if kpInteract or kpAttack and not choiceSelected
    {
        cutscene_start(obj_Controller, ds_list_find_value(Choices, (choiceOption * 2) + 1));
        choiceSelected = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increase Subimage
Subimage += ImageSpeed;
if Subimage &gt;= sprite_get_number(ani_ChoiceArrow)
{
    Subimage = 0;
}
GemOffset = 0;
if (round(Subimage) - 1) mod 3 = 0
{
    GemOffset = 1;
}
else if ((round(Subimage) - 2) mod 6) = 0 or ((round(Subimage) - 3) mod 6) = 0
{
    GemOffset = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Choicebox
if Active
{
    create_choice_box(Choices, sht_Box, w, noone, image_alpha, cx, cy, Alignment);
    if not choiceInit
    {
        alarm[0] = room_speed / 30;
        choiceInit = true;
    }
    //draw_text(16, 16, obj_Controller.timeline_index);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
