<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_LoadingScreen</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000004</depth>
  <persistent>-1</persistent>
  <parentName>par_HUDObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
sprite_index = tsn_FadeBlack;
FrameModulus = 30 / room_speed;
image_speed = FrameModulus;
LoadingBarAlpha = 0;
Loading = false;
loadBar = 0;
loadBarColour = c_lime;
loadedBarColour = c_orange;
if instance_exists(obj_GUI)
{
    obj_GUI.GameFrozen = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Load Screen
if round(image_index) = floor(image_number / 2) - 1
{
    Loading = true;
}
if Loading
{
    image_speed = 0;
    image_index = floor(image_number / 2);
    if instance_exists(obj_GUI)
    {
        obj_GUI.GameFrozen = true;
    }
}
else
{
    image_speed = FrameModulus;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fade Loading Bar
var i;
switch image_index &lt;= floor(image_number / 2) - 1
{
    case true: i = image_index; break;
    case false: i = image_number - image_index; break;
}
loadBarAlpha = i / (floor(image_number / 2) - 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Instance
instance_destroy();
if instance_exists(obj_GUI)
{
    obj_GUI.GameFrozen = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Transition
draw_sprite_ext(sprite_index, image_index, 0, 0, view_wport[view_current] / sprite_width, view_hport[view_current] / sprite_height, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Loading Bar
draw_set_alpha(loadBarAlpha);
draw_set_font(fnt_TitleFont);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_text_ext_transformed_colour(view_wport / 2, view_hport / 3, "Loading...", 0, 960, 1, 1, 0, c_white, c_white, c_white, c_white, loadBarAlpha);
draw_set_font(fnt_Designs);
draw_text_ext_transformed_colour(view_wport / 2, view_hport / 3, ")", 0, 480, 0.8, 0.8, 0, c_white, c_white, c_white, c_white, loadBarAlpha * 0.25);
draw_set_valign(fa_top);
draw_set_halign(fa_left);
var colour;
switch (not Loading and loadBar = 1)
{
    case true: colour = loadedBarColour; break;
    case false: colour = loadBarColour; break;
}
draw_healthbar((view_wport / 2) - 316, ((view_hport / 3) * 2), (view_wport / 2) + 315, (view_hport / 3) * 2 + 25, loadBar * 100, c_gray, colour, colour, 0, false, false);
draw_sprite(spr_BossBar, 0, view_wport / 2, ((view_hport / 3) * 2) - 3);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
