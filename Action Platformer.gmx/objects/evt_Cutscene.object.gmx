<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_EventCutscene</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>0</persistent>
  <parentName>par_Event</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Attributes
Timeline = noone;
Interaction = "Touch";
Interacted = false;
TouchTarget = obj_Player;
SwitchNumber = -1;
SwitchBoolean = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Run Timeline
if not Interacted
{
    switch Interaction
    {
        case "Touch":
            if collision_rectangle(x, y, x + sprite_width, y + sprite_height, TouchTarget, false, true)
            {
                canComplete = true;
                if SwitchNumber != -1
                {
                    if get_switch(SwitchNumber) = SwitchBoolean
                    {
                        canComplete = false;
                    }
                }
                if canComplete
                {
                    cutscene_start(obj_Controller, Timeline);
                    set_switch(SwitchNumber, SwitchBoolean);
                }
                Interacted = true;
                with object_index
                {
                    if Timeline = other.Timeline
                    {
                        instance_destroy();
                    }
                }
            }
            break;
        case "Automatic":
            if not instance_exists(obj_RoomTransition)
            {
                canComplete = true;
                if SwitchNumber != -1
                {
                    if get_switch(SwitchNumber) = SwitchBoolean
                    {
                        canComplete = false;
                    }
                }
                if canComplete
                {
                    cutscene_start(obj_Controller, Timeline);
                    set_switch(SwitchNumber, SwitchBoolean);
                }
                Interacted = true;
                with object_index
                {
                    if Timeline = other.Timeline
                    {
                        instance_destroy();
                    }
                }
            }
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Information
if obj_GUI.Debug
{
    draw_text_transformed_colour(2, 320, "TIMELINE: " + string(timeline_index) + "/" + string(timeline_running), 0.1625, 0.1625, 0, c_black, c_black, c_black, c_black, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
