<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>ani_Bat_hanging</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Attributes
NoGravity = true;
Vulnerable = false;
Tracking = true;
Screeching = false;
Decelerates = true;
Neutral = true;
CanFall = false;
bSpeed = 0.5;
dSpeed = 0.5;
ScreechTime = -1;
SightRadius = 10;
image_speed = 0;
Neutral = true;
Unfurling = false;
deadSound = sfx_GolemDead;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Statistics
statStrength = 5;
statVitality = 0;
statDexterity = 12;
statFortitude = 2;
statWisdom = 4;
statMagic = 0;

enemyName = "Dungeon Bat";
lootExp = 4;
lootGold = 6;
set_statistics(self, true);

baseHealth = 40;
baseMana = 0;

statMaxHealth = baseHealth;
statHealth = statMaxHealth;
statMaxMana = baseMana;
statMana = statMaxMana;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize States
stateNormal = ani_Bat;
frameNormal = 1;
stateScreeching = ani_Bat_screeching;
frameScreeching = 0.5;
stateHanging = sprite_index;
frameHanging = 0;
stateUnfurling = ani_Bat_unfurling;
frameUnfurling = 0.5;
frameAlert = 1;
stateDead = ani_FlyingSkull_death;
frameDead = 0.5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize VRI's
ds_list_add(Elements,
                    "MAGIC", 0.5,
                    "FROST", 2.0,
                    "HOLY", 1.5);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Drops
lootDrops = ds_list_create();
ds_list_add(lootDrops,
        itm_BatWing, 0.5, 2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Track Player
var theta;
targetX = obj_Player.x;
targetY = obj_Player.y;
theta = point_direction(x, y, targetX, targetY) + 90;
r_theta = (theta * pi) / 180;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fly Towards Player
if not (Neutral or Dead or obj_GUI.GameFrozen or (status("PARALYZE") + 1))
{
    if InRadius
    {
        if not Screeching
        {
            Screeching = true;
            hSpeed = 0;
            vSpeed = 0;
        }
    }
    else
    {
        if Screeching and ScreechTime &gt; 60
        {
            Screeching = false;
            ScreechTime = -1;
        }
        if not Screeching
        {
            hSpeed = 2 * sin(r_theta);
            vSpeed = 2 * cos(r_theta);
        }
    }
}
else if Dead
{
    NoGravity = false;
    hSpeed = 0;
}
else if Neutral
{
    hSpeed = 0;
    vSpeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Screech
if not (Dead or obj_GUI.GameFrozen or (status("PARALYZE") + 1))
{
    if Screeching and ScreechTime &lt;= 60
    {
        if ScreechTime mod 20 = 0
        {
            bDir = point_direction(x+(dir*3), y-2, targetX, targetY) + 90;
            with instance_create(x+(dir*3), y-2, obj_Bat_sonic)
            {
                hSpeed = other.bSpeed * sin((other.bDir * pi) / 180);
                vSpeed = other.bSpeed * cos((other.bDir * pi) / 180);
                image_angle = other.bDir - 90;
                Origin = other;
            }
        }
        ScreechTime += 1;
    }
    else
    {
        ScreechTime = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if Neutral
if Neutral and not Unfurling
{
    if point_distance(x, y, targetX, targetY) &lt; 32 and image_index = 0
    {
        image_index = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set States
if not (obj_GUI.GameFrozen or (status("PARALYZE") + 1))
{
    if Dead
    {
        sprite_index = stateDead;
        image_speed = frameDead * obj_GUI.FrameModulus;
    }
    else if Neutral
    {
        sprite_index = stateHanging;
        image_speed = frameHanging * obj_GUI.FrameModulus;
        if image_index &gt; 0 or Unfurling
        {
            image_speed = frameAlert * 0.5 * obj_GUI.FrameModulus;
            if Unfurling
            {
                sprite_index = stateUnfurling;
            }
        }
    }
    else if Screeching
    {
        sprite_index = stateScreeching;
        image_speed = frameScreeching * obj_GUI.FrameModulus;
    }
    else
    {
        sprite_index = stateNormal;
        image_speed = frameNormal * obj_GUI.FrameModulus;
    }
}
else
{
    image_speed = 0;
}
if round(image_index) = 5 and image_number &gt; 5
{
    image_index = 6;
}

if not Neutral
{
    switch dir
    {
        case 0: image_xscale = 1; break;
        default: image_xscale = sign(x - obj_Player.x); break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with another Entity
if not Neutral
{
    move_outside_all(point_direction(other.x, other.y, x, y), 4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Bat">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with another Entity
if not Neutral
{
    move_outside_all(point_direction(other.x, other.y, x, y), 4);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Alert
if Neutral
{
    if Unfurling
    {
        with object_index
        {
            Neutral = false;
            vSpeed = 6;
        }
    }
    else
    {
        image_index = 0;
        Unfurling = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Information
if obj_GUI.Debug
{
    draw_text_transformed_colour(x-8, y+8, string(floor(image_index)) + "/" + string(image_number - 1), 0.1625, 0.1625, 0, c_black, c_black, c_black, c_black, 1);
    draw_text_transformed_colour(x-8, y+24, string(floor(Neutral)), 0.1625, 0.1625, 0, c_black, c_black, c_black, c_black, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
