<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_SmallCoin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_Item</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_inherited()
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Attributes
Value = 1;
Weight = 1;
dSpeed = 0.5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Environmental Checks
LeftWallCheck = place_meeting(x-2, y, obj_Block) and !place_meeting(x-2, bbox_top, obj_SlopeTL) and !place_meeting(x-2, bbox_bottom, obj_SlopeBL);
RightWallCheck = place_meeting(x+2, y, obj_Block) and !place_meeting(x+2, bbox_top, obj_SlopeTL) and !place_meeting(x-2, bbox_bottom, obj_SlopeBL);
LeftWallCheck = false;
LeftWallSliding = false;
RightWallCheck = false;
RightWallSliding = false;
Walljumping = false;
WallKickedOff = 0;
OnGround = place_meeting(x, y+1, obj_Block);
InLiquid = place_meeting(x, y, par_Liquid);
OnSlope = place_meeting(x, y+4, obj_SlopeTL);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increase Gold
change_gold(Value);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Environmental Checks
LeftWallCheck = place_meeting(x-2, y, obj_Block) and !place_meeting(x-2, bbox_top, obj_SlopeTL) and !place_meeting(x-2, bbox_bottom, obj_SlopeBL);
RightWallCheck = place_meeting(x+2, y, obj_Block) and !place_meeting(x+2, bbox_top, obj_SlopeTL) and !place_meeting(x-2, bbox_bottom, obj_SlopeBL);
LeftWallCheck = false;
LeftWallSliding = false;
RightWallCheck = false;
RightWallSliding = false;
Walljumping = false;
WallKickedOff = 0;
OnGround = place_meeting(x, y+1, obj_Block);
InLiquid = place_meeting(x, y, par_Liquid);
OnSlope = place_meeting(x, y+4, obj_SlopeTL);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
if obj_GUI.GameFrozen = false
{
    if place_meeting(x+hSpeed, y, obj_Block)
    {
        yPlus = 0;
        if not Mask = object_get_name(place_meeting(x+hSpeed, y-yPlus, obj_Block))
        {
            while place_meeting(x+hSpeed, y-yPlus, obj_Block) and yPlus &lt;= TileDimensions
            {
                yPlus += 1;
            }
        }
        if place_meeting(x+hSpeed, y-yPlus, obj_Block)
        {
            if not Mask = object_get_name(place_meeting(x+sign(hSpeed), y, obj_Block))
            {
                while !place_meeting(x+sign(hSpeed), y, obj_Block)
                {
                    x += sign(hSpeed);
                }
            }
            if object_is_ancestor(self, obj_Player)
            {
                if abs(iSpeed) = 0
                {
                    hSpeed = 0;
                }
            }
            else
            {
                hSpeed = 0;
            }
        }
        else
        {
            y -= yPlus;
        }
    }
    
    if object_get_parent(self) = obj_Player
    {
        if place_meeting(x, y+1, obj_LedgeMiddle)
        {
            if obj_GUI.kpDown
            {
                y += 4
            }
        }
    }
    
    if place_meeting(x, y+vSpeed, obj_Block)
    {
        if not Mask = object_get_name(place_meeting(x, y+vSpeed, obj_Block))
        {
            if !place_meeting(x, y, obj_LedgeMiddle)
            {
                while !place_meeting(x, y+sign(vSpeed), obj_Block)
                {
                    y += sign(vSpeed);
                }
                vSpeed = 0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fall by Gravity
if obj_GUI.GameFrozen = false
{
    selfGravity = Weight * (Gravity * 0.5);
    if InLiquid
    {
        if not Sinking
        {
            Sinking = true;
            vSpeed = 1;
        }
        selfGravity = Weight * (Gravity * 0.5) * (2 / instance_nearest(x, y, par_Liquid).Density);
    }
    else
    {
        Sinking = false;
    }
    G = selfGravity * FrameModulus;
    if not OnGround
    {
        vSpeed += G;
        vSpeed = min(max(vSpeed, -10), 10);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change Character Position
if not obj_GUI.GameFrozen
{
    x += hSpeed;
    y += vSpeed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Decelerate
if abs(hSpeed) &lt;= dSpeed
{
    hSpeed = 0;
}
if hSpeed != 0
{
    hSpeed -= sign(hSpeed) * dSpeed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pickup Gold
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
