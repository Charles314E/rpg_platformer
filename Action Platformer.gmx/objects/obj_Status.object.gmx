<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Status</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000003</depth>
  <persistent>-1</persistent>
  <parentName>par_HUDObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Status
StatusShown = false;
image_alpha = 1;

statusOption = 0;
statPointSubimage = 0;

statusXOffset = (view_wport[view_current] / 2) - 64;
statusYOffset = 222;

statusBackAlpha = 0;
statusBackOffset = 0;
n = 0;

weaponAttack = 0;
attackSign = "";
attackColour = noone;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Cursor Position
alarm[0] = room_speed / 30;
cursor_x = window_mouse_get_x();
cursor_y = window_mouse_get_y();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Option Shadow
if n &lt; 16
{
    statusBackAlpha += 0.01;
    statusBackOffset += 0.25;
    n += 1;
    alarm[0] = room_speed / 30;
}
else
{
    n = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Cursor Position
if obj_Menu.MenuShown and obj_Menu.Nested and StatusShown and obj_Menu.backAlpha &gt;= 0.5
{
    if obj_GUI.kpUp
    {
        statusOption = max(0, statusOption - 1);
        statusBackAlpha = 0;
        statusBackOffset = 0;
        n = 0;
        alarm[0] = room_speed / 30;
    }
    if obj_GUI.kpDown
    {
        statusOption = min(10, statusOption + 1);
        statusBackAlpha = 0;
        statusBackOffset = 0;
        n = 0;
        alarm[0] = room_speed / 30;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get Player Attributes, Statistics, Elements and Statuses
if instance_exists(obj_Player)
{
    PlayerAttributes = ds_list_create();
    ds_list_add(PlayerAttributes, obj_Player.statStrength, "Strength",
                                  obj_Player.statVitality, "Vitality",
                                  obj_Player.statDexterity, "Dexterity",
                                  obj_Player.statFortitude, "Fortitude",
                                  obj_Player.statWisdom, "Wisdom",
                                  obj_Player.statMagic, "Magic");
    PlayerStatistics = ds_list_create();
    var AttackString, KnockbackString;
    switch obj_Player.statMinAttack = obj_Player.statMaxAttack
    {
        case true: AttackString = obj_Player.statMinAttack; break;
        case false: AttackString = string(int64(obj_Player.statMinAttack)) + " - " + string(int64(obj_Player.statMaxAttack)); break;
    }
    switch obj_Player.statMinKnockback = obj_Player.statMaxKnockback
    {
        case true: KnockbackString = obj_Player.statMinKnockback; break;
        case false: KnockbackString = string(int64(obj_Player.statMinKnockback)) + " - " + string(int64(obj_Player.statMaxKnockback)); break;
    }
    ds_list_add(PlayerStatistics, AttackString, "Attack",
                                  obj_Player.statDefense, "Defense",
                                  obj_Player.statEndurance, "Endurance",
                                  KnockbackString, "Knockback",
                                  obj_Player.statResistance, "Resistance");
    PlayerElements = ds_list_create();
    var ev, ei, n;
    for (i = 0; i &lt; ds_list_size(obj_GUI.Elements); i += 1)
    {
        ev = ds_list_find_value(obj_GUI.Elements, i);
        ei = ds_list_find_index(obj_Player.Elements, string_upper(ev));
        n = 1;
        if ei != -1
        {
            n = ds_list_find_value(obj_Player.Elements, ei + 1);
        }
        ds_list_add(PlayerElements, n, ev);
    }
    PlayerStatuses = ds_list_create();
    var ev, ei, n;
    for (i = 0; i &lt; ds_list_size(obj_GUI.Statuses); i += 1)
    {
        ev = ds_list_find_value(obj_GUI.Statuses, i);
        ei = ds_list_find_index(obj_Player.Statuses, string_upper(ev));
        if ei != -1
        {
            ds_list_add(PlayerStatuses, ev);
        }
    }
}

if StatusShown
{
    statPointSubimage += (1/6);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increase Stat
if obj_Menu.MenuShown and obj_Menu.Nested and StatusShown and obj_Menu.backAlpha &gt;= 0.5
{
    if obj_GUI.kpInteract or obj_GUI.kpAttack
    {
        if instance_exists(obj_Player)
        {
            if statusOption &lt; 6 and obj_Player.StatPoints &gt; 0
            {
                switch statusOption
                {
                    case 0: obj_Player.statStrength += 1; break;
                    case 1: obj_Player.statVitality += 1; break;
                    case 2: obj_Player.statDexterity += 1; break;
                    case 3: obj_Player.statFortitude += 1; break;
                    case 4: obj_Player.statWisdom += 1; break;
                    case 5: obj_Player.statMagic += 1; break;
                }
                obj_Player.StatPoints -= 1;
                
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Weapon Attack
weaponAttack = obj_WeaponSwitcher.weaponAttack;
switch sign(weaponAttack)
{
    case -1: attackSign = "-";
             attackColour = c_orange;
        break;
    case 1: attackSign = "+";
             attackColour = c_lime;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Attributes
image_alpha = (-1 * obj_Menu.cursorAlpha) + 1;
draw_set_alpha(1);
if StatusShown
{
    create_message_box("", sht_Box, 8, 13, noone, image_alpha, statusXOffset + obj_Menu.menuOffset, 16 + statusYOffset);
    if instance_exists(obj_Player)
    {
        if obj_Player.StatPoints &gt; 0
        {
            create_message_box("", sht_Box, 1, 1, noone, image_alpha, statusXOffset + obj_Menu.menuOffset, statusYOffset);
            create_message_box("", sht_Box, 2, 1, noone, image_alpha, 16 + statusXOffset + obj_Menu.menuOffset, statusYOffset);
            draw_sprite_ext(ani_StatPoint, floor(statPointSubimage), 4 + statusXOffset + obj_Menu.menuOffset, 4 + statusYOffset, 1, 1, 0, c_white, image_alpha);
            draw_text_ext_transformed_colour(24 + statusXOffset + obj_Menu.menuOffset, statusYOffset - 5, obj_Player.StatPoints, 0, 96, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha);
        }
        for (var i = 0; i &lt; 6; i += 1)
        {
            if statusOption = i
            {
                draw_sprite_ext(sht_Attributes, i, (16 + statusXOffset + obj_Menu.menuOffset) - statusBackOffset, 16 + (statusYOffset + (i * 32) + 8) + statusBackOffset, 1, 1, 0, c_white, image_alpha * statusBackAlpha * 2);
                draw_text_ext_transformed_colour((36 + statusXOffset + obj_Menu.menuOffset) - statusBackOffset, 16 + (statusYOffset + (i * 32) + 4) + statusBackOffset, ds_list_find_value(PlayerAttributes, ((i + 1) * 2) - 1), 0, 96, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha * statusBackAlpha * 2);
                draw_text_ext_transformed_colour((36 + statusXOffset + obj_Menu.menuOffset) - statusBackOffset, 16 + (statusYOffset + (i * 32) + 20) + statusBackOffset, ds_list_find_value(PlayerAttributes, i * 2), 0, 96, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha * statusBackAlpha * 2);
            }
            draw_sprite_ext(sht_Attributes, i, 16 + statusXOffset + obj_Menu.menuOffset, 16 + statusYOffset + (i * 32) + 8, 1, 1, 0, c_white, image_alpha);
            draw_text_ext_transformed_colour(36 + statusXOffset + obj_Menu.menuOffset, 16 + statusYOffset + (i * 32) + 4, ds_list_find_value(PlayerAttributes, ((i + 1) * 2) - 1), 0, 96, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha);
            draw_text_ext_transformed_colour(36 + statusXOffset + obj_Menu.menuOffset, 16 + statusYOffset + (i * 32) + 20, ds_list_find_value(PlayerAttributes, i * 2), 0, 96, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Statistics
image_alpha = (-1 * obj_Menu.cursorAlpha) + 1;
draw_set_alpha(1);
if StatusShown
{
    create_message_box("", sht_Box, 8, 11, noone, image_alpha, statusXOffset + obj_Menu.menuOffset, 224 + statusYOffset);
    for (var i = 0; i &lt; 5; i += 1)
    {
        if statusOption = i + 6
        {
            draw_sprite_ext(sht_Stats, i, (16 + statusXOffset + obj_Menu.menuOffset) - statusBackOffset, 224 + (statusYOffset + (i * 32) + 8) + statusBackOffset, 1, 1, 0, c_white, image_alpha * statusBackAlpha * 2);
            draw_text_ext_transformed_colour((36 + statusXOffset + obj_Menu.menuOffset) - statusBackOffset, 224 + (statusYOffset + (i * 32) + 4) + statusBackOffset, ds_list_find_value(PlayerStatistics, ((i + 1) * 2) - 1), 0, 768, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha * statusBackAlpha * 2);
            draw_text_ext_transformed_colour((36 + statusXOffset + obj_Menu.menuOffset) - statusBackOffset, 224 + (statusYOffset + (i * 32) + 20) + statusBackOffset, ds_list_find_value(PlayerStatistics, i * 2), 0, 768, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha * statusBackAlpha * 2);
            if i = 0 and abs(weaponAttack) &gt; 0
            {
                draw_text_ext_transformed_colour((36 + statusXOffset + obj_Menu.menuOffset + (string_width(ds_list_find_value(PlayerStatistics, i * 2)) * 0.1625)) - statusBackOffset, 224 + (statusYOffset + (i * 32) + 20) + statusBackOffset, " " + attackSign + " " + string(abs(weaponAttack)), 0, 768, 0.1625, 0.1625, 0, attackColour, attackColour, attackColour, attackColour, image_alpha * statusBackAlpha * 2);
            }
        }
        draw_sprite_ext(sht_Stats, i, 16 + statusXOffset + obj_Menu.menuOffset, 224 + statusYOffset + (i * 32) + 8, 1, 1, 0, c_white, image_alpha);
        draw_text_ext_transformed_colour(36 + statusXOffset + obj_Menu.menuOffset, 224 + statusYOffset + (i * 32) + 4, ds_list_find_value(PlayerStatistics, ((i + 1) * 2) - 1), 0, 768, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha);
        draw_text_ext_transformed_colour(36 + statusXOffset + obj_Menu.menuOffset, 224 + statusYOffset + (i * 32) + 20, ds_list_find_value(PlayerStatistics, i * 2), 0, 768, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha);
        if i = 0 and abs(weaponAttack) &gt; 0
        {
            draw_text_ext_transformed_colour((36 + statusXOffset + obj_Menu.menuOffset + (string_width(ds_list_find_value(PlayerStatistics, i * 2)) * 0.1625)), 224 + (statusYOffset + (i * 32) + 20), " " + attackSign + " " + string(abs(weaponAttack)), 0, 768, 0.1625, 0.1625, 0, attackColour, attackColour, attackColour, attackColour, image_alpha);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Elements
image_alpha = (-1 * obj_Menu.cursorAlpha) + 1;
draw_set_alpha(1);
if StatusShown
{
    var ww, element, percentage, p_colour;
    ww = statusXOffset + obj_Menu.menuOffset + 128;
    create_message_box("", sht_Box, 8, (ds_list_size(obj_GUI.Elements) * 2) + 1, noone, image_alpha, ww, 16 + statusYOffset);
    if instance_exists(obj_Player)
    {
        for (var i = 0; i &lt; ds_list_size(obj_GUI.Elements); i += 1)
        {
            element = ds_list_find_value(PlayerElements, ((i + 1) * 2) - 1);
            percentage = ds_list_find_value(PlayerElements, i * 2);
            switch sign(percentage - 1)
            {
                case -1: p_colour = c_lime; break;
                case 0: p_colour = c_white; break;
                case 1: p_colour = c_orange; break;
            }
            draw_sprite_ext(sht_Elements, i, 16 + ww, 16 + statusYOffset + (i * 32) + 8, 1, 1, 0, c_white, image_alpha);
            draw_text_ext_transformed_colour(36 + ww, 16 + statusYOffset + (i * 32) + 4, element, 0, 96, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha);
            draw_text_ext_transformed_colour(36 + ww, 16 + statusYOffset + (i * 32) + 20, string(percentage * 100), 0, 96, 0.1625, 0.1625, 0, p_colour, p_colour, p_colour, p_colour, image_alpha);
            draw_text_ext_transformed_colour(36 + ww + (string_width(string(percentage * 100)) * 0.1625), 16 + statusYOffset + (i * 32) + 20, "%", 0, 96, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Statuses
image_alpha = (-1 * obj_Menu.cursorAlpha) + 1;
draw_set_alpha(1);
if StatusShown
{
    var ww, statusID, time, minutes, seconds, tierces;
    ww = statusXOffset + obj_Menu.menuOffset + 256;
    create_message_box("", sht_Box, 8, (ds_list_size(PlayerStatuses) * 2) + 1, noone, image_alpha, ww, 16 + statusYOffset);
    if instance_exists(obj_Player)
    {
        for (var i = 0; i &lt; ds_list_size(PlayerStatuses); i += 1)
        {
            statusID = ds_list_find_value(PlayerStatuses, i);
            time = status(string_upper(statusID), obj_Player);
            minutes = int64(time / power(60, 2));
            seconds = string_replace(string_format(ceil(time / power(60, 1)), 2, 0), " ", "0");
            tierces = string_replace(string_format(ceil(time mod power(60, 1)), 2, 0), " ", "0");
            draw_sprite_ext(sht_Statuses, ds_list_find_index(obj_GUI.Statuses, string_flupper(statusID)), 16 + ww, 16 + statusYOffset + (i * 32) + 8, 1, 1, 0, c_white, image_alpha);
            draw_text_transformed_colour(36 + ww, 16 + statusYOffset + (i * 32) + 4, statusID, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha);
            draw_text_transformed_colour(36 + ww, 16 + statusYOffset + (i * 32) + 20, string(minutes) + ":" + string(seconds), 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, image_alpha);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Bars (WIP)
image_alpha = (-1 * obj_Menu.cursorAlpha) + 1;
draw_set_alpha(1);
if StatusShown
{
    var ww;
    ww = statusXOffset + obj_Menu.menuOffset + 384;
    create_message_box("", sht_Box, 8, (ds_list_size(PlayerStatuses) * 2) + 1, noone, image_alpha, ww, 16 + statusYOffset);
    if instance_exists(obj_Player)
    {
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Information
if StatusShown and obj_GUI.Debug
{
    draw_set_halign(fa_right);
    draw_text_transformed_colour(view_wport[view_current], 0, n, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, 1);
    draw_text_transformed_colour(view_wport[view_current], 16, statusBackOffset, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, 1);
    draw_text_transformed_colour(view_wport[view_current], 32, statusBackAlpha, 0.1625, 0.1625, 0, c_white, c_white, c_white, c_white, 1);
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
